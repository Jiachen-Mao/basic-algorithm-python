# Revising the select I

SELECT * FROM CITY WHERE COUNTRYCODE = 'USA' AND POPULATION > 100000;


# Revising the select II

SELECT NAME FROM CITY WHERE COUNTRYCODE = 'USA' AND POPULATION > 120000;


# Select all

SELECT * FROM CITY;


# Select by ID

SELECT * FROM CITY WHERE ID = 1661;


# Japanese Cities' Attributes

SELECT * FROM CITY WHERE COUNTRYCODE = 'JPN';


# Japanese Cities' Names

SELECT NAME FROM CITY WHERE COUNTRYCODE = 'JPN';


# Weather 1

SELECT CITY, STATE FROM STATION;


# Weather 3

SELECT DISTINCT CITY FROM STATION WHERE ID % 2 = 0;


# Weather 4

SELECT COUNT(CITY) - COUNT(DISTINCT CITY) FROM STATION;


# Weather 5

SELECT CITY, LENGTH(CITY) FROM STATION
ORDER BY LENGTH(CITY), CITY
LIMIT 1;

SELECT CITY, LENGTH(CITY) FROM STATION
ORDER BY LENGTH(CITY) DESC, CITY
LIMIT 1;


# Weather 6

SELECT DISTINCT CITY FROM STATION
WHERE CITY REGEXP '^[AEIOU]';


# Weather 7

SELECT DISTINCT CITY FROM STATION
WHERE CITY REGEXP '[aeiou]$';


# Weather 8

SELECT DISTINCT CITY FROM STATION
WHERE CITY REGEXP '^[AEIOU].*[aeiou]$';


# Weather 9

SELECT DISTINCT CITY FROM STATION
WHERE CITY REGEXP '^[^AEIOU]';


# Weather 10

SELECT DISTINCT CITY FROM STATION
WHERE CITY REGEXP '[^aeiou]$';


# Weather 11

SELECT DISTINCT CITY FROM STATION
WHERE CITY REGEXP '^[^AEIOU]|[^aeiou]$';


# Weather 12

SELECT DISTINCT CITY FROM STATION
WHERE CITY REGEXP '^[^AEIOU].*[^aeiou]$';


# Higher than 75 marks

SELECT Name FROM STUDENTS
WHERE Marks > 75
ORDER BY RIGHT(Name, 3), ID;


# Employee name

SELECT name FROM Employee
ORDER BY name;


# Employee salary

SELECT name FROM Employee
WHERE salary > 2000 AND months < 10
ORDER BY employee_id;


# Asian population

SELECT SUM(CITY.POPULATION)
FROM CITY, COUNTRY
WHERE CITY.COUNTRYCODE = COUNTRY.COUNTRYCODE AND COUNTRY.CONTINENT = 'Asia';


# African cities

SELECT CITY.NAME FROM CITY, COUNTRY
WHERE CITY.COUNTRYCODE = COUNTRY.COUNTRYCODE AND COUNTRY.CONTINENT = 'Africa';


# Average population of each continent

SELECT COUNTRY.CONTINENT, FLOOR(AVG(CITY.POPULATION))
FROM CITY INNER JOIN COUNTRY
ON CITY.COUNTRYCODE = COUNTRY.COUNTRYCODE
GROUP BY COUNTRY.CONTINENT;


# The report

SELECT IF (S.Marks < 8, 'NULL', S.Name), G.Grade, S.Marks
FROM Students as S, Grade AS G
WHERE S.Marks BETWEEN G.Min_Mark AND G.Max_Mark
ORDER BY G.Grade DESC, S.Name;


# The count function

SELECT COUNT(*) FROM CITY
WHERE POPULATION > 100000;


# The sum function

SELECT SUM(POPULATION) FROM CITY
WHERE DISTRICT = 'California';


# Average

SELECT FLOOR(AVG(POPULATION)) FROM CITY;


# Population density difference

SELECT MAX(POPULATION) - MIN(POPULATION) FROM CITY;


# Blunder

SELECT CEIL(AVG(Salary) - AVG(REPLACE(Salary, '0', '')))
FROM Employee;


# Top earner

SELECT salary*months AS earnings, COUNT(*) FROM
FROM Employee
GROUP BY earnings ORDER BY earnings DESC
LIMIT 1;


# Weather 2

SELECT ROUND(SUM(LAT_N), 2), ROUND(SUM(LONG_W), 2) FROM STATION;


# Weather 13

SELECT TRUNCATE(SUM(LAT_N), 4) FROM STATION
WHERE LAT_N BETWEEN 38.7880 AND 137.2345;


# Weather 14

SELECT TRUNCATE(MAX(LAT_N), 4) FROM STATION
WHERE LAT_N < 137.2345;


# Weather 15

SELECT ROUND(LONG_W, 4) FROM STATION
WHERE LAT_N < 137.2345
ORDER LAT_N DESC
LIMIT 1;


# Weather 17

SELECT ROUND(LONG_W, 4) FROM STATION
WHERE LAT_N > 38.7780
ORDER BY LAT_N
LIMIT 1;


# Weather 18

SELECT ROUND(MAX(LAT_N) - MIN(LAT_N) + MAX(LONG_W) - MIN(LONG_W), 4)
FROM STATION;


# Weather 19

SELECT ROUND(SQRT(
POWER(MAX(LAT_N) - MIN(LAT_N), 2) + 
POWER(MAX(LONG_W) - MIN(LONG_W), 2)
), 4)
FROM STATION;